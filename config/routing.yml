# Put these in your own routing.yml where you have control over them.
# It's tough to override and/or remove routes in a plugin's routing.yml.

# a_entity_admin:
#   class: aEntityRouteCollection
#   options:
#     model:                aEntity
#     module:               aEntityAdmin
#     prefix_path:          /manage/:class
#     column:               id
#     with_wildcard_routes: true

# a_entity_index:
#   url: /directory
#   param: { module: aEntity, action: index }

# The 'class' will actually be the cssPlural, a nice URL-friendly
# plural name for the entity.

# a_entity_class:
#   url: /directory/:class
#   param: { module: aEntity, action: class }

# a_entity_show:
#   url: /directory/:class/:slug
#   param: { module: aEntity, action: show }
#
# This route is safe against changes to slugs and thus suitable
# for use as a virtual page slug to get content into our search engine.
#
# a_entity_search_result:
#   url: /directory/search-result/:id
#   param: { module: aEntity, action: searchResult }

# Not yet in use:
# JSON data fetch. NOTE: URL is fixed
# a_entity_info:
#   url: /a-entities/info
#   param: { module: aEntity, action: info }

